# Contenu des fichiers de configuration à créer manuellement :
# Fichier `mongod_shard.conf`
"""
sharding:
  clusterRole: shardsvr
replication:
  replSetName: rsShard
"""

# Fichier `mongod_config.conf`
"""
sharding:
  clusterRole: configsvr
replication:
  replSetName: rsConfig
"""

# Fichier `mongos.conf`
"""
sharding:
  configDB: rsConfig/localhost:27017
"""

# Démarrer les instances mongod pour les shard servers
# À exécuter dans des fenêtres PowerShell ou CMD séparées
"""
subprocess.Popen([
    "mongod", "--shardsvr", "--replSet", "rsShard", "--port", "27018", 
    "--dbpath", "D:\\Cours_NoSQL\\data\\shard1", "--bind_ip", "localhost", 
    "--config", "D:\\Cours_NoSQL\\Replication\\mongod_shard.conf"
])
"""

"""
subprocess.Popen([
    "mongod", "--shardsvr", "--replSet", "rsShard", "--port", "27019", 
    "--dbpath", "D:\\Cours_NoSQL\\data\\shard2", "--bind_ip", "localhost", 
    "--config", "D:\\Cours_NoSQL\\Replication\\mongod_shard.conf"
])
"""

"""
subprocess.Popen([
    "mongod", "--shardsvr", "--replSet", "rsShard", "--port", "27020", 
    "--dbpath", "D:\\Cours_NoSQL\\data\\shard3", "--bind_ip", "localhost", 
    "--config", "D:\\Cours_NoSQL\\Replication\\mongod_shard.conf"
])
"""

# Démarrer le config server
# À exécuter dans PowerShell ou CMD
"""
subprocess.Popen([
    "mongod", "--configsvr", "--replSet", "rsConfig", "--port", "27017", 
    "--dbpath", "D:\\Cours_NoSQL\\data\\configdb", "--bind_ip", "localhost", 
    "--config", "D:\\Cours_NoSQL\\Replication\\mongod_config.conf"
])
"""

# Pause pour s'assurer que les instances sont démarrées
"""
time.sleep(10)
"""

# Initialiser le set de réplication pour les shard servers
"""
client = MongoClient('localhost', 27018)
db = client.admin
db.command("replSetInitiate")
"""

"""
client = MongoClient('localhost', 27018)
db = client.admin
config = db.command("replSetGetConfig")["config"]
config["members"].append({"_id": 1, "host": "localhost:27019"})
config["members"].append({"_id": 2, "host": "localhost:27020"})
db.command("replSetReconfig", config)
"""

# Initialiser le set de réplication pour le config server
"""
client = MongoClient('localhost', 27017)
db = client.admin
db.command("replSetInitiate")
"""

# Démarrer le processus mongos
# À exécuter dans PowerShell ou CMD
"""
subprocess.Popen([
    "mongos", "--config", "D:\\Cours_NoSQL\\Replication\\mongos.conf", 
    "--bind_ip", "localhost", "--port", "27021"
])
"""

# Ajouter les shards via mongos
"""
client = MongoClient('localhost', 27021)
db = client.admin
db.command("addShard", "rsShard/localhost:27018,localhost:27019,localhost:27020")
"""

# Activer le sharding pour la base de données
"""
client = MongoClient('localhost', 27021)
db = client.admin
db.command("enableSharding", "sharding_db")
"""

# Sharder la collection
"""
client = MongoClient('localhost', 27021)
db = client.admin
db.command("shardCollection", "sharding_db.realEstate", key={"_id": "hashed"})
"""

# Vérifier le statut du sharding
"""
client = MongoClient('localhost', 27021)
db = client.admin
print(db.command("sh.status"))
"""

# Obtenir le nombre de chunks
"""
client = MongoClient('localhost', 27021)
db = client.sharding_db
print(db.realEstate.getShardDistribution())
"""

# Vérifier la distribution des données
"""
client = MongoClient('localhost', 27021)
db = client.sharding_db
print(db.realEstate.find().explain("executionStats"))
"""

# Insérer des nouveaux documents et vérifier la distribution
"""
client = MongoClient('localhost', 27021)
db = client.sharding_db
db.realEstate.insert_many([
    {"name": "Property 1"},
    {"name": "Property 2"},
    {"name": "Property 3"}
])
print(db.realEstate.getShardDistribution())
"""

# Nettoyer le cluster shardé
"""
client = MongoClient('localhost', 27021)
db = client.admin
db.command("removeShard", "localhost:27018")
db.command("removeShard", "localhost:27019")
db.command("removeShard", "localhost:27020")
"""

# Arrêter les instances mongod et le config server
"""
client = MongoClient('localhost', 27018)
db = client.admin
db.command("shutdown")
"""

"""
client = MongoClient('localhost', 27019)
db = client.admin
db.command("shutdown")
"""

"""
client = MongoClient('localhost', 27020)
db = client.admin
db.command("shutdown")
"""

"""
client = MongoClient('localhost', 27017)
db = client.admin
db.command("shutdown")
"""

# Supprimer les répertoires de données
"""
import shutil
shutil.rmtree("D:\\Cours_NoSQL\\data\\configdb")
shutil.rmtree("D:\\Cours_NoSQL\\data\\shard1")
shutil.rmtree("D:\\Cours_NoSQL\\data\\shard2")
shutil.rmtree("D:\\Cours_NoSQL\\data\\shard3")
"""